const express = require('express');
const router = express.Router();
const Temoignage = require('../models/temoignage');
const { sendNewTestimonialNotification } = require('../utils/emailService');

// Poster un t√©moignage
router.post('/', async (req, res) => {
  try {
    console.log("Corps re√ßu :", req.body);
    const { name, message } = req.body;

    // Validation des champs requis
    if (!name || !message) {
      return res.status(400).json({ 
        success: false,
        error: 'Nom et message requis' 
      });
    }

    // Validation de longueur
    if (name.trim().length < 2) {
      return res.status(400).json({ 
        success: false,
        error: 'Le nom doit contenir au moins 2 caract√®res' 
      });
    }

    if (message.trim().length < 10) {
      return res.status(400).json({ 
        success: false,
        error: 'Le message doit contenir au moins 10 caract√®res' 
      });
    }

    // Cr√©er le t√©moignage
    const temoignage = await Temoignage.create({ 
      name: name.trim(), 
      message: message.trim() 
    });

    console.log('‚úÖ T√©moignage cr√©√©:', temoignage);

    // Envoyer notification email (avec gestion d'erreur)
    try {
      // Passer les donn√©es avec createdAt pour l'email
      await sendNewTestimonialNotification(temoignage);
      console.log('‚úÖ Notification email envoy√©e');
    } catch (emailError) {
      console.error('‚ö†Ô∏è Erreur envoi email (t√©moignage sauv√©):', emailError);
      // Le t√©moignage est quand m√™me sauv√© m√™me si l'email √©choue
    }

    res.status(201).json({
      success: true,
      message: 'Merci pour votre t√©moignage ! Il sera publi√© apr√®s validation.',
      data: temoignage
    });

  } catch (error) {
    console.error('‚ùå Erreur ajout t√©moignage:', error);
    res.status(500).json({ 
      success: false,
      error: 'Erreur serveur lors de l\'ajout du t√©moignage' 
    });
  }
});

// R√©cup√©rer uniquement les t√©moignages valid√©s
router.get('/', async (req, res) => {
  try {
    console.log('üîç R√©cup√©ration des t√©moignages valid√©s...');
    
    const temoignages = await Temoignage.find({ status: 'validated' })
      .sort({ createdAt: -1 })
      .lean(); // Optimisation

    console.log(`‚úÖ ${temoignages.length} t√©moignages r√©cup√©r√©s`);

    // Structure de r√©ponse coh√©rente avec le frontend
    res.json({
      success: true,
      data: {
        temoignages: temoignages
      }
    });

  } catch (error) {
    console.error('‚ùå Erreur r√©cup√©ration t√©moignages:', error);
    res.status(500).json({ 
      success: false,
      error: 'Erreur serveur lors de la r√©cup√©ration des t√©moignages' 
    });
  }
});

module.exports = router;